@use "sass:map";
@use "sass:list";
@use "./colors";
@use "./screens";

// Кнопки
@mixin mat-button {
  *.mat-button-base {
    &.mat-stroked-button,
    &.mat-flat-button {
      $height: 44px;

      height: $height;
      line-height: $height;
      padding: 0 24px;

      &,
      * {
        font-family: "Roboto", open-sans;
        font-weight: 600;
      }
    }
  }
}

// Обертка поля
@mixin mat-form-field {
  // Обертка
  .mat-form-field {
    $elm: &;

    width: 100%;

    :host ::ng-deep &-appearance-fill & {
      &-subscript-wrapper {
        margin-top: 4px;
        padding-left: 0;
        padding-right: 0;
      }

      &-flex {
        border-radius: 0;
        padding: 8px 18px 0 18px;
      }
    }

    :host ::ng-deep &-infix {
      display: flex;
      flex-flow: row nowrap;
    }

    app-text-input + :host > & {
      margin-top: 15px;
    }

    @content;
  }

  // Сообщение об ошибке
  .mat-error {
    font-size: 10px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// Всплывающие сообщения
@mixin mat-snack-bar {
  .mat-snack-bar-container.snackbar {
    // Цвета
    $colors: (
      info: colors.$mat-disabled 900,
      success: colors.$mat-primary 700,
      error: colors.$mat-status-warn 600,
    );
    // Цикл по стилям
    @each $class, $color in $colors {
      &-#{$class} {
        background: map.get(list.nth($color, 1), list.nth($color, 2));
        color: map.get(list.nth($color, 1), contrast, list.nth($color, 2));
        // Кнопка
        .mat-simple-snackbar-action {
          color: map.get(list.nth($color, 1), contrast, list.nth($color, 2));
        }
      }
    }
  }
}

// Выпадающие списки
@mixin mat-option {
  .mat-option {
    line-height: 1;
    height: auto;
    padding: 0;
  }
}
