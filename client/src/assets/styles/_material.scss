@use "sass:map";
@use "sass:list";
@use "sass:math";
@use "./colors";
@use "./screens";
@use "./containers";
@use "./mixins";
@use "./vars";

// Кнопки
@mixin mat-button {
  $iconSize: 24px;
  // Базовые стили
  .mdc-button {
    line-height: 1;
    vertical-align: middle;
    // Иконка
    > .mat-icon {
      width: $iconSize;
      height: $iconSize;
      line-height: $iconSize;
      font-size: $iconSize;
      margin-right: 9px;
      margin-left: -9px;
    }
  }
  // Остальное
  .mat-mdc-button {
    $__elm: &;
    // Прочее
    &-base {
      text-decoration: none;
      // Убрать фон
      &.no-pointer > .mdc-fab__ripple {
        display: none;
      }
      // Убрать тень
      &.mat-elevation-z {
        box-shadow: none !important;
      }
      // Базовые настройки
      &[mat-stroked-button],
      &[mat-flat-button] {
        line-height: vars.$buttonSize;
        padding: 0 24px;
        height: vars.$buttonSize;
        // Стили иконок
        &,
        > *:not(.mat-icon) {
          font-family: "Roboto", open-sans;
          font-weight: 400;
        }
      }
      // Убрать отступы иконок
      &[mat-mini-fab],
      &[mat-icon-button] {
        > .mat-icon {
          margin-right: 0;
          margin-left: 0;
        }
      }
      // Загрузчик
      &[button-loader="true"] {
        pointer-events: none;
        // Иконка
        > .mat-icon {
          font-size: 0;
          line-height: 0;
          // Полосы
          @include mixins.loader($iconSize, 2px, 1s, #fff);
        }
        // Расскрасить кнопки
        &[mat-stroked-button],
        &[mat-mini-fab] {
          // Общий цвет
          > .mat-icon {
            @include mixins.loaderColors(colors.$text);
          }
          // Статус: warn
          &.mat-warn > .mat-icon {
            @include mixins.loaderColors(map.get(colors.$mat-status-warn, 500));
          }
          // Статус: accent
          &.mat-accent > .mat-icon {
            @include mixins.loaderColors(map.get(colors.$mat-secondary, 500));
          }
          // Статус: primary
          &.mat-primary > .mat-icon {
            @include mixins.loaderColors(map.get(colors.$mat-primary, 500));
          }
        }
      }
    }
  }
}

// Обертка поля
@mixin mat-form-field {
  // Обертка
  .mat-mdc-form-field {
    $elm: &;
    $padding: 12px;
    // Свойства
    width: 100%;
    // Поле с картинкой
    .image + & {
      margin-left: -#{vars.$matFormFieldImageSize};
      // Обертка поля
      ::ng-deep #{$elm}-flex {
        padding-left: vars.$matFormFieldImageSize + $padding;
        padding-right: $padding;
      }
      // Линия
      ::ng-deep #{$elm}-underline {
        left: vars.$matFormFieldImageSize;
        width: calc(100% - #{vars.$matFormFieldImageSize});
      }
    }
    // Поле с картинкой
    &.hasImage {
      width: calc(100% - #{vars.$matFormFieldImageSize});
    }
    // Обертка заполненного стиля
    :host ::ng-deep &-appearance-fill & {
      &-subscript-wrapper {
        margin-top: 4px;
        padding-left: 0;
        padding-right: 0;
      }
      // Флекс коробка
      &-flex {
        border-radius: 0;
        padding: 8px 18px 0 18px;
      }
    }
    // Расположение иконок
    :host ::ng-deep &-infix {
      // display: flex;
      // flex-flow: row nowrap;
    }
    // Отключение валидаторов
    :host ::ng-deep &.disabled-validators {
      // Убрать поле
      > #{$elm}-subscript-wrapper {
        display: none;
      }
    }
    // Автозаполнение
    & {
      $__input: ".mat-mdc-input-element:autofill";
      // Общее правило
      #{$__input} {
        box-shadow: 0 0 0 30px #f5f5f5 inset !important;
      }
      // Выделение
      &:hover #{$__input} {
        box-shadow: 0 0 0 30px #ececec inset !important;
      }
      // Выделение
      &.mat-focused #{$__input} {
        box-shadow: 0 0 0 30px #dcdcdc inset !important;
      }
    }
    // Отступы сверху
    $__elms: app-text-input app-autocomplete-input app-toggle-input app-chips-input mat-radio-group;
    @each $__elm in $__elms {
      &:not(.no-margin) + &:not(.no-margin),
      &:not(.no-margin) + #{$__elm}:not(.no-margin),
      #{$__elm}:not(.no-margin) + &:not(.no-margin),
      #{$__elm}:not(.no-margin) + :host:not(.no-margin) > &:not(.no-margin),
      #{$__elm}:not(.no-margin) + :host:not(.no-margin) > .layout:not(.no-margin) > &:not(.no-margin),
      #{$__elm}:not(.no-margin) + :host:not(.no-margin) > .layout:not(.no-margin) > &:not(.no-margin) + .image:not(.no-margin) {
        margin-top: 15px;
      }
    }
    // Содержимое
    @content;
  }

  // Поле
  .mat-mdc-input-element {
    background-image: none !important;
    // Курсор
    &.mat-mdc-autocomplete-trigger[readonly] {
      cursor: pointer;
    }
  }

  // Last Pass icons
  ::ng-deep *[id*="__lpform"] {
    display: none !important;
    position: fixed !important;
    top: auto !important;
    left: auto !important;
    right: -1000px !important;
    bottom: -1000px !important;
    opacity: 0 !important;
    visibility: hidden !important;
  }

  // Сообщение об ошибке
  .mat-error {
    font-size: 10px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// Всплывающие сообщения
@mixin mat-snack-bar {
  .mat-snack-bar-container.snackbar {
    // Цвета
    $colors: (
      info: colors.$mat-disabled 900,
      success: colors.$mat-primary 700,
      error: colors.$mat-status-warn 600,
    );
    // Цикл по стилям
    @each $class, $color in $colors {
      &-#{$class} {
        background: map.get(list.nth($color, 1), list.nth($color, 2));
        color: map.get(list.nth($color, 1), contrast, list.nth($color, 2));
        // Кнопка
        .mat-simple-snackbar-action {
          color: map.get(list.nth($color, 1), contrast, list.nth($color, 2));
        }
      }
    }
  }
}

// Диалоговое окно
@mixin mat-dialog {
  // Заголовок
  .title {
    // Свойства
    display: grid;
    grid-template-columns: 1fr #{vars.$dialogPadding};
    grid-template-rows: vars.$dialogPadding;
    grid-template-areas: "title button";
    grid-gap: 0 15px;
    align-items: center;
    line-height: math.div(vars.$dialogPadding, 2);
    // Подзаголовок
    &.hasSubTitle {
      grid-template-areas: "title button" "subtitle button";
      grid-template-rows: #{math.div(vars.$dialogPadding, 2)} #{math.div(vars.$dialogPadding, 2)};
    }

    // Заголовок
    &__title {
      grid-area: title;
      font: inherit;
      color: #000;
    }
    // Подзаголовок
    &__subTitle {
      grid-area: subtitle;
      font: inherit;
      font-size: 0.7em;
      font-weight: 400;
      color: #000;
    }
    // Кнопка закрыть
    &__button {
      grid-area: button;
      width: vars.$dialogPadding;
      height: vars.$dialogPadding;
      line-height: vars.$dialogPadding;
      font-size: vars.$dialogPadding * 0.6;
      cursor: pointer;
      text-align: center;
    }
  }
  // Окно
  .mat-dialog {
    // Окно
    &-container {
      padding: vars.$dialogPadding;
    }
    // Содержимое
    &-content {
      font-size: 0;
      line-height: 1;
      max-height: vars.$dialogContentMaxHeight;
    }
    // Действия
    &-actions {
      width: 100%;
      padding: 16px 0;
      // Кнопки
      > .buttons {
        width: 100%;
        display: flex;
        flex-flow: row nowrap;
        justify-content: flex-end;
        align-items: center;
        gap: 8px;
      }
    }
  }
}

// Выпадающие списки
@mixin mat-option {
  .mat-mdc-option {
    line-height: 1;
    height: auto;
    padding: 0;
    // Текст
    ::ng-deep > .mdc-list-item__primary-text {
      width: 100%;
    }
  }
}
