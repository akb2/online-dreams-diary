@use "sass:map";
@use "./colors";

$breakpoints: (
  xsmall: 600,
  small: 900,
  middle: 1200,
  large: 1800,
  xlarge: 100000,
);

$animation-time: 0.3s;

$card-border-radius: 5px;
$card-shadow: 1px 1px 10px 1px #{colors.$shadow};

// Максимальное разрешение брейкпоинта
@function max_resolution($screen) {
  @if (map.has-key($breakpoints, $screen)) {
    @return map.get($breakpoints, $screen);
  }

  @return 0;
}

// Минимальное разрешение брейкпоинта
@function min_resolution($screen) {
  @if (map.has-key($breakpoints, $screen)) {
    $prev_screen: none;
    $continue: true;

    @each $key, $value in $breakpoints {
      @if ($value < map.get($breakpoints, $screen) and $continue==true) {
        $prev_screen: $key;
      } @else {
        $continue: false;
      }
    }

    @if (map.has-key($breakpoints, $prev_screen)) {
      @return map.get($breakpoints, $prev_screen);
    }
  }

  @return 0;
}

// Адаптация
@mixin adaptive($min_screen: auto, $max_screen: auto) {
  // От нуля до нужного экрана
  @if ($min_screen==auto and map.has-key($breakpoints, $max_screen)) {
    @media (max-width: #{max_resolution( $max_screen )}px) {
      @content;
    }
  }

  // От нужного экрана до бесконечности
  @else if (map.has-key($breakpoints, $min_screen) and $max_screen==auto) {
    @media (min-width: #{max_resolution( $min_screen )}px) {
      @content;
    }
  }

  // Определенный диапазон
  @else if (map.has-key($breakpoints, $min_screen) and map.has-key($breakpoints, $max_screen)) {
    @media (min-width: #{min_resolution( $min_screen )}px) and (max-width: #{max_resolution( $max_screen )}px) {
      @content;
    }
  }

  // Просто показать содержимое
  @else {
    @content;
  }
}

// Адаптация под разные экраны
@mixin adaptiveFor($values) {
  @each $screen, $value in $values {
    @include adaptive($screen, $screen) {
      @content ($value);
    }
  }
}
