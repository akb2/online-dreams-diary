@use "sass:map";
@use "sass:list";
@use "./colors";

$breakpoints: (
  xxsmall: 400,
  xsmall: 600,
  small: 900,
  middle: 1200,
  large: 1800,
  xlarge: 100000
);

$animationTime: 0.3s;

// Максимальное разрешение брейкпоинта
@function maxResolution($screen) {
  @if (map.has-key($breakpoints, $screen)) {
    @return map.get($breakpoints, $screen);
  }

  @return 0;
}

// Минимальное разрешение брейкпоинта
@function minResolution($screen) {
  @if (map.has-key($breakpoints, $screen)) {
    $prev_screen: none;
    $continue: true;

    @each $key, $value in $breakpoints {
      @if ($value < map.get($breakpoints, $screen) and $continue==true) {
        $prev_screen: $key;
      } @else {
        $continue: false;
      }
    }

    @if (map.has-key($breakpoints, $prev_screen)) {
      @return map.get($breakpoints, $prev_screen) + 1;
    }
  }

  @return 1;
}

// Адаптация
@mixin adaptive($min_screen: auto, $max_screen: auto) {
  // От нуля до нужного экрана
  @if ($min_screen==auto and map.has-key($breakpoints, $max_screen)) {
    @media (max-width: #{maxResolution( $max_screen )}px) {
      @content;
    }
  }

  // От нужного экрана до бесконечности
  @else if (map.has-key($breakpoints, $min_screen) and $max_screen==auto) {
    @media (min-width: #{maxResolution( $min_screen )}px) {
      @content;
    }
  }

  // Определенный диапазон
  @else if (map.has-key($breakpoints, $min_screen) and map.has-key($breakpoints, $max_screen)) {
    @media (min-width: #{minResolution( $min_screen )}px) and (max-width: #{maxResolution( $max_screen )}px) {
      @content;
    }
  }

  // Просто показать содержимое
  @else {
    @content;
  }
}

// Адаптация под разные экраны
@mixin adaptiveFor($values...) {
  @each $screen, $value in $breakpoints {
    @include adaptive($screen, $screen) {
      $datas: ();
      @each $value in $values {
        $data: "";
        // Значение для экрана
        @if (map.has-key($value, $screen)) {
          $data: map.get($value, $screen);
        }
        // Значение по умолчанию
        @else if(map.has-key($value, default)) {
          $data: map.get($value, default);
        }
        // Добавить значение
        $datas: list.append($datas, $data);
      }
      @content ($datas...);
    }
  }
}
