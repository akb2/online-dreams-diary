@use "sass:map";
@use "sass:math";
@use "colors";
@use "containers";

// Повторить строку
@function str-repeat($string, $count: 1, $implementer: "") {
  $return: "";

  @for $i from 1 through $count {
    @if ($i > 1) {
      $return: #{$return}#{$implementer};
    }

    $return: #{$return}#{$string};
  }

  @return $return;
}

// Получить переменную
@function map-get($map, $key) {
  @if (map.has-key($map, $key)) {
    @return map.get($map, $key);
  }
  // Значение по умолчанию
  @else if(map.has-key($map, default)) {
    @return map.get($map, default);
  }
  // Ничего не найдено
  @return "";
}

// Замена для INSET
@mixin inset($top: none, $left: none, $bottom: none, $right: none) {
  @if ($top == none and $left == none and $bottom == none and $right == none) {
    $top: 0;
    $left: 0;
    $bottom: 0;
    $right: 0;
  } @else if ($left == none and $bottom == none and $right == none) {
    $left: $top;
    $bottom: $top;
    $right: $top;
  } @else if ($bottom == none and $right == none) {
    $bottom: $top;
    $right: $left;
  } @else if ($right == none) {
    $right: $bottom;
  }

  top: $top;
  left: $left;
  bottom: $bottom;
  right: $right;
}

// Замена для множественного Margin
@mixin margin($top: none, $left: none, $bottom: none, $right: none) {
  @if ($top == none and $left == none and $bottom == none and $right == none) {
    $top: 0;
    $left: 0;
    $bottom: 0;
    $right: 0;
  } @else if ($left == none and $bottom == none and $right == none) {
    $left: $top;
    $bottom: $top;
    $right: $top;
  } @else if ($bottom == none and $right == none) {
    $bottom: $top;
    $right: $left;
  } @else if ($right == none) {
    $right: $bottom;
  }

  margin-top: $top;
  margin-left: $left;
  margin-bottom: $bottom;
  margin-right: $right;
}

// Огранисение на количество линий
@mixin lineClamp($lines: 1, $height: 1.2, $fontSize: 14px, $padding: 0, $heightImportant: false) {
  $important: "";
  // Обязательные поля
  @if ($heightImportant == 1 or $heightImportant == true) {
    $important: "!important";
  }
  // Не указана единица измерения для высоты
  @if (math.is-unitless($height)) {
    $height: $height * $fontSize;
  }
  // Свойства
  overflow: hidden;
  padding-top: $padding;
  padding-bottom: $padding;
  font-size: $fontSize;
  // Установка высоты
  @if ($height > 0) {
    line-height: #{$height} #{$important};
    min-height: #{$height + ($padding * 2)} #{$important};
    max-height: #{($height * $lines) + ($padding * 2)} #{$important};
  }
  // Две и более линий
  @if ($lines > 1) {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;
    white-space: normal;
  }
  // Для одной линии
  @else {
    white-space: nowrap;
    text-overflow: ellipsis;
  }
}

// Свойства контейнера
@mixin imageContainer($height: 10px, $padding: 280px) {
  overflow: hidden;
  border-radius: containers.$cardBorderRadius;
  background-color: colors.$background;
  height: $height;
  padding: $padding;
  cursor: pointer;
}

// Отметка онлайн
@mixin onlineBlinkPoint($size: 6px, $pos: 5px) {
  position: absolute;
  display: block;
  right: $pos;
  bottom: $pos;
  width: $size;
  height: $size;
  border-radius: 50%;
  background-color: map.get(colors.$mat-status-warn, A700);
  animation: onlineBlinkPointAnimation 0.5s ease infinite alternate;
  // Правила анимации
  @keyframes onlineBlinkPointAnimation {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
}

// Лоадер
@mixin loader($size: 24px, $line: 2px, $speed: 1s, $color: map.get(colors.$mat-primary, 500)) {
  $lineB: math.round($line * 0.7);
  $spacing: math.clamp(2px, $lineB, 5px);
  $sizeB: $size - (($line + $spacing) * 2);
  $speedB: $speed * 0.6;
  // Свойства
  position: relative;
  // Полосы
  &::before,
  &::after {
    content: "";
    position: absolute;
    display: block;
    border: 0 solid transparent;
    border-radius: 50%;
  }
  // Внешняя полоса
  &::before {
    @include inset(calc(50% - #{math.div($size, 2)}));
    // Свойства
    border-width: $line;
    animation: mixinsLoaderAnimation #{$speed} linear infinite;
  }
  // Внутренняя полоса
  &::after {
    @include inset(calc(50% - #{math.div($sizeB, 2)}));
    // Свойства
    border-width: $lineB;
    opacity: 0.8;
    animation: mixinsLoaderAnimation #{$speedB} linear infinite;
  }
  // Расскрасить лоадер
  @include loaderColors($color);
  // Правила анимации
  @keyframes mixinsLoaderAnimation {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}

// Цвета лоадера
@mixin loaderColors($color: map.get(colors.$mat-primary, 500)) {
  // Полосы
  &::before,
  &::after {
    border-top-color: $color;
  }
}
