@use "sass:map";
@use "sass:list";
@use "sass:math";
@use "screens";
@use "colors";
@use "containers";

// Текущие данные о токене
.token {
  $counts: (
    xxsmall: auto,
    xsmall: auto,
    small: 2,
    middle: 3,
    large: 4,
    xlarge: 5
  );
  $gaps-x: (
    default: 45px,
    middle: 30px,
    small: 20px,
    xsmall: 10px,
    xxsmall: 10px
  );
  $gaps-y: (
    default: 30px,
    middle: 25px,
    small: 20px,
    xsmall: 15px,
    xxsmall: 15px
  );
  $image-sizes: (
    default: 64px,
    small: 50px,
    xsmall: 40px,
    xxsmall: 40px
  );
  $text-spacings: (
    default: 10px,
    small: 3px,
    xsmall: 0px,
    xxsmall: 0px
  );
  $title-heights: (
    default: 18px,
    small: 17px,
    xsmall: 15px,
    xxsmall: 15px
  );
  // Свойства
  display: flex;
  flex-flow: row wrap;
  text-align: left;
  // Адаптив
  @include screens.adaptiveFor($gaps-x, $gaps-y) using($gap-x, $gap-y) {
    gap: #{$gap-y} #{$gap-x};
  }
  @include screens.adaptive(xxsmall, xsmall) {
    flex-flow: column nowrap;
  }
  // Элемент
  &__element {
    display: grid;
    grid-template-areas: "image title" "image subtitle";
    gap: 0 10px;

    // Картинка
    &-image {
      grid-area: image;
      overflow: hidden;
      // Иконка
      > mat-icon {
        width: inherit;
        height: inherit;
        color: map.get(colors.$matSecondary, 500);
        text-align: center;
      }
      // Картинка
      > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }
    // Тексты
    &-name,
    &-value {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    // Заголовок
    &-name {
      grid-area: title;
      font-size: 14px;
      font-weight: 300;
      color: colors.$subtitle;
    }
    // Подзаголовок
    &-value {
      grid-area: subtitle;
      font-size: 20px;
      font-weight: 500;
      color: colors.$title;
    }

    // Адаптив
    @include screens.adaptiveFor($counts, $gaps-x, $image-sizes, $text-spacings, $title-heights) using($count, $gap-x, $image-size, $text-spacing, $title-height) {
      grid-template-columns: #{$image-size} 1fr;
      // Один элемент на строке
      @if ($count == auto) {
        width: auto;
        max-width: 100%;
      }
      // Расчитать ширину
      @else {
        width: calc((100% - #{$gap-x * ($count - 1)}) / #{$count});
      }

      // Картинка
      &-image {
        width: $image-size;
        height: $image-size;
        // Иконка
        > mat-icon {
          line-height: $image-size;
          font-size: $image-size * 0.78;
        }
      }
      // Заголовок
      &-name {
        margin-top: $text-spacing;
        line-height: $title-height;
        height: $title-height;
        font-size: $title-height * 0.85;
      }
      // Подзаголовок
      &-value {
        margin-bottom: $text-spacing;
      }
      // Подзаголовок
      &-value {
        $line-height: $image-size - $title-height - ($text-spacing * 2);
        // Свойства
        line-height: $line-height;
        height: $line-height;
        font-size: $line-height * 0.7;
      }
    }
  }
}

// Таблица данных
.table {
  $paddings: (
    default: 7px 12px,
    xlarge: 14px 20px,
    large: 10px 15px
  );
  $font-sizes: (
    default: 12px,
    xlarge: 15px,
    large: 14px
  );
  // Свойства
  border-radius: containers.$cardBorderRadius;
  box-shadow: containers.$cardBoxShadow;
  width: 100%;
  // Линии
  &__line {
    display: grid;
    grid-template-areas:
      "title-create-date title-last-action-date title-ip title-os title-browser title-controls"
      "create-date last-action-date ip os browser controls";
    align-items: stretch;
    background-color: colors.$card;
    color: colors.$text;
    // Адаптив
    @include screens.adaptiveFor($paddings) using($padding) {
      grid-template-columns: 140px 140px 1fr 1fr 1fr #{40px+ (list.nth($padding, 2) * 2)};
    }
    // Заголовок
    > .title {
      background-color: map.get(colors.$matPrimary, 500);
      color: map.get(colors.$matPrimary, contrast, 500);
      display: none;
      // Закругление первой ячейки
      &.create-date {
        border-radius: #{containers.$cardBorderRadius} 0 0 0;
      }
      // Закругление последней ячейки
      &.controls {
        border-radius: 0 #{containers.$cardBorderRadius} 0 0;
      }
    }
    // Последующие блоки
    &:first-child {
      // Заголовок
      > .title {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
      }
    }
    // Четные линии
    &:nth-child(2n) {
      background-color: map.get(colors.$matPrimary, 50);
      color: map.get(colors.$matPrimary, contrast, 50);
    }
    // Первая линия
    &:first-child {
      border-radius: #{containers.$cardBorderRadius} #{containers.$cardBorderRadius} 0 0;
    }
    // Последняя линия
    &:last-child {
      border-radius: 0 0 #{containers.$cardBorderRadius} #{containers.$cardBorderRadius};
    }
  }
  // Ячейки
  &__ceil {
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: flex-start;
    // Адаптив
    @include screens.adaptiveFor($paddings, $font-sizes) using($padding, $font-size) {
      padding: $padding;
      font-size: $font-size;
    }
    // Убрать контроль
    &.controls {
      // Полный экран
      .desktop {
        display: inline-block;
      }
      // Мобильный экран
      .mobile {
        display: none;
      }
    }
    // Названия
    & {
      $names: create-date last-action-date ip os browser controls;
      // Цикл по классам
      @each $class in $names {
        &.#{$class} {
          grid-area: $class;
          // Для заголовка
          &.title {
            grid-area: title-#{$class};
          }
        }
      }
    }

    // Мелкий текст
    .light {
      font-size: 0.8em;
      opacity: 0.8;
    }
  }

  // Адаптив
  @include screens.adaptive(auto, small) {
    background-color: transparent;
    box-shadow: none;
    border-radius: 0;
    // Линии
    &__line {
      display: grid;
      grid-template-columns: 1fr 2fr;
      box-shadow: containers.$cardBoxShadow;
      grid-template-areas:
        "title-create-date create-date"
        "title-last-action-date last-action-date"
        "title-ip ip"
        "title-os os"
        "title-browser browser"
        "title-controls controls";
      // Фон
      &,
      &:nth-child(2n) {
        background-color: colors.$card;
        color: colors.$text;
      }
      // Скругления
      &,
      &:first-child,
      &:last-child {
        border-radius: containers.$cardBorderRadius;
      }
      // Заголовок
      &,
      &:first-child {
        > .title {
          display: flex;
          // Закругление первой ячейки
          &.create-date {
            border-radius: #{containers.$cardBorderRadius} 0 0 0;
          }
          // Закругление последней ячейки
          &.controls {
            border-radius: 0 0 0 #{containers.$cardBorderRadius};
          }
        }
      }
      // Отступы
      & + & {
        margin-top: 15px;
      }
    }
    // Ячейка
    &__ceil {
      // Цвета
      &:nth-child(6) ~ &:nth-child(2n) {
        background-color: map.get(colors.$matPrimary, 50);
        color: map.get(colors.$matPrimary, contrast, 50);
      }
      // Кнопки
      &.controls {
        // Полный экран
        .desktop {
          display: none;
        }
        // Мобильный экран
        .mobile {
          display: inline-block;
        }
      }
    }
  }
}

// Иконки
.attach {
  $_elm: &;
  $image-size: 42px;
  // Свойства
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  gap: 8px;
  // Картинка
  &__image {
    width: $image-size;
    height: $image-size;
    flex-basis: $image-size;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }
  // Текст
  &__text {
    flex-grow: 1;
  }

  // Загрузка
  &.loading {
    position: relative;
    // Остальное
    #{$_elm} {
      $size-1: 40px;
      $size-2: 30px;
      $line-1: 2px;
      $line-2: 1px;
      $time-1: 0.5s;
      $time-2: 1s;
      // Картинка
      &__image {
        width: math.max($size-1, $size-2);
        height: math.max($size-1, $size-2);
        flex-basis: math.max($size-1, $size-2);
        // Общие правила
        &:before,
        &:after {
          display: block;
          position: absolute;
          content: "";
          border-radius: 50%;
          border-color: transparent;
          border-style: solid;
        }
        // Лоадер
        &:before {
          width: $size-1;
          height: $size-1;
          border-width: #{$line-1};
          border-top-color: map.get(colors.$matPrimary, 500);
          top: math.div(math.max($size-1, $size-2) - $size-1, 2);
          left: math.div(math.max($size-1, $size-2) - $size-1, 2);
          animation: loader-animation #{$time-1} linear infinite;
        }
        // Лоадер
        &:after {
          width: $size-2;
          height: $size-2;
          border-width: #{$line-2};
          border-top-color: map.get(colors.$matPrimary, 400);
          top: math.div(math.max($size-1, $size-2) - $size-2, 2);
          left: math.div(math.max($size-1, $size-2) - $size-2, 2);
          animation: loader-animation #{$time-2} linear infinite;
        }
      }
      // Текст
      &__text {
        display: none;
      }

      // Адаптив
      @include screens.adaptive(auto, small) {
        // Текст
        &__text {
          display: block;
          font-size: 12px;
        }
      }
    }
  }
}

// Форма смены пароля
.pass-form {
  $templates: (
    xxsmall: 1fr,
    xsmall: 1fr,
    small: 1fr 1fr,
    default: repeat(3, minmax(1px, 1fr)) auto
  );
  $actionsAlignX: (
    xxsmall: center,
    xsmall: center,
    small: flex-end,
    default: flex-end
  );
  // Свойства
  display: grid;
  align-items: center;
  gap: 15px;
  // Действия
  &__actions {
    display: flex;
    flex-flow: row nowrap;
    align-items: flex-start;
    padding-bottom: 1.34375em;
  }
  // Адаптив
  @include screens.adaptiveFor($templates, $actionsAlignX) using($template, $actionAlignX) {
    grid-template-columns: $template;
    // Действия
    &__actions {
      justify-content: $actionAlignX;
    }
  }
}

// Правила анимации
@keyframes loader-animation {
  0% {
    transform: rotate(0deg);
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    transform: rotate(360deg);
    opacity: 1;
  }
}
