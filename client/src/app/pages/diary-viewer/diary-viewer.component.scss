@use "sass:map";
@use "sass:math";
@use "colors";
@use "screens";
@use "containers";
@use "vars";
@use "mixins";

// Данные сновидения
.dream {
  $fontSize: 20px;
  $lineHeight: 1.3;
  $textIndent: $fontSize * 2;
  $tablePaddingY: math.div($fontSize, 2);
  $tablePaddingX: $fontSize;
  $footerSizes: (
    default: 0,
    small: vars.$headerHeight,
    xsmall: vars.$headerHeight,
    xxsmall: vars.$headerHeight
  );
  // Карта
  &__map {
    width: 100%;
    // Адаптив
    @include screens.adaptiveFor(containers.$paddingsY, $footerSizes) using($paddingY, $footerSize) {
      height: calc(100vh - #{vars.$headerHeight + $footerSize + ($paddingY * 2)});
    }
  }
  // Текст
  &__text {
    display: block;
    color: colors.$text;
    font-size: $fontSize;
    line-height: $lineHeight;
    // Вложения
    > ::ng-deep .text {
      @include mixins.wysiwigContent($fontSize, $lineHeight);
    }
    // Цитата
    ::ng-deep blockquote {
      border-left: 6px solid #{colors.$text};
      margin-left: 0;
      margin-right: 0;
      padding: 1.5rem 2rem;
      font: inherit;
      font-style: italic;
      background-color: colors.$card;
      margin-top: $fontSize * $lineHeight;
      margin-bottom: 0;
    }
    // Абзац
    ::ng-deep p {
      font: inherit;
      line-height: inherit;
      margin-top: 0;
      margin-bottom: 0;
    }
    // Убрать отступы
    ::ng-deep p + p {
      margin-top: $fontSize * $lineHeight;
    }
  }
  // Адаптив
  @include screens.adaptiveFor(containers.$paddingsY) using($paddingY) {
    // Отступы
    &__map + &__text,
    &__text + &__text {
      margin-top: $paddingY;
    }
  }
}

// Контент
.content {
  $__elm: &;
  $commentsWidths: (
    default: 100%,
    xlarge: 30%,
    large: 38%
  );
  $shadowCorrection: 8px;
  $keyWordsGapY: 8px;
  $keyWordsGapX: 16px;
  $keyWordsShowLine: 1;
  $keyWordsOpenShowLine: 10;
  $keyWordsShowLineMobile: 4;
  $keyWordsOpenShowLineMobile: 24;
  // Свойства
  display: grid;
  align-items: start;
  grid-template-rows: auto 1fr;
  // Внутренние блоки
  &__data,
  &__comments,
  &__keywords {
    position: sticky;
    z-index: 1;
  }
  // Блок комментариев
  &__keywords {
    grid-area: keywords;
    background-color: colors.$background;
    z-index: 3;
    overflow: hidden;
    position: relative;
    transition:
      max-height #{screens.$animationTime},
      box-shadow #{screens.$animationTime};
    padding-right: vars.$buttonSize + $keyWordsGapX;
    // Элемент прокручен
    &.scrolled {
      box-shadow: 0 10px 10px -10px #{colors.$shadow};
    }
    // Блок с элементами
    &-helper {
      display: flex;
      flex-flow: row wrap;
      justify-content: flex-start;
      align-items: flex-start;
      gap: #{$keyWordsGapY} #{$keyWordsGapX};
    }
    // Кнопка раскрытия списка
    &-button {
      position: absolute;
      right: 0;
      bottom: 0;
    }
    // Заполнитель снизу
    &::after {
      @include mixins.inset;
      // Свойства
      content: "";
      display: block;
      top: auto;
      position: absolute;
      background-color: colors.$background;
    }
  }
  // Блок описания
  &__data {
    grid-area: data;
  }
  // Блок комментариев
  &__comments {
    grid-area: comments;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: stretch;
    z-index: 4;
    // Блок редактора
    &-editor {
      background-color: colors.$card;
      box-shadow: containers.$cardBoxShadow;
      border-radius: containers.$cardBorderRadius;
      padding-right: containers.$cardPaddingX;
    }
  }
  // Адаптив
  @include screens.adaptiveFor(vars.$userProfileBlocksGaps, $commentsWidths, containers.$paddingsY) using($gap, $width, $paddingY) {
    gap: $gap;
    // Блок комментариев
    &__comments {
      gap: $gap;
    }
    // На всю ширину
    @if ($width == 100%) {
      grid-template-columns: 1fr;
      grid-template-areas: "keywords" "data" "comments";
      // Внутренние блоки
      &__data,
      &__comments {
        width: 100%;
        position: static;
      }
      // Блок комментариев
      &__keywords {
        width: 100%;
        max-height: ($keyWordsGapY * ($keyWordsShowLineMobile - 1)) + (vars.$buttonSize * $keyWordsShowLineMobile);
        top: 0 !important;
        // Элемент прокручен
        &.scrolled {
          box-shadow: none;
        }
        // Заполнитель снизу
        &::after {
          display: none;
        }
        // Раскрытые список
        &.open {
          max-height: ($keyWordsGapY * ($keyWordsOpenShowLineMobile - 1)) + (vars.$buttonSize * $keyWordsOpenShowLineMobile);
        }
      }
    }
    // В две колонки
    @else {
      grid-template-columns: 1fr #{$width};
      grid-template-areas: "keywords comments" "data comments";
      // Блок комментариев
      &__keywords {
        padding-top: $paddingY;
        padding-bottom: $gap - $shadowCorrection;
        margin-top: -#{$paddingY};
        margin-bottom: -#{$gap - $shadowCorrection};
        top: vars.$headerHeight;
        max-height: $paddingY + ($gap - $shadowCorrection) + ($keyWordsGapY * ($keyWordsShowLine - 1)) + (vars.$buttonSize * $keyWordsShowLine);
        // Заполнитель снизу
        &::after {
          height: $gap - $shadowCorrection;
        }
        // Раскрытые список
        &.open {
          @for $lines from 1 through $keyWordsOpenShowLine {
            &[lines="#{$lines}"] {
              max-height: $paddingY + ($gap - $shadowCorrection) + ($keyWordsGapY * ($lines - 1)) + (vars.$buttonSize * $lines);
            }
          }
        }
        // Кнопка раскрытия списка
        &-button {
          bottom: $gap - $shadowCorrection;
        }
      }
    }
  }
  // Без комментариев
  &.noComments {
    grid-template-columns: 1fr;
    grid-template-areas: "keywords" "data";
    // Блок данных
    #{$__elm}__data {
      width: 100%;
    }
  }
}

// Отметки свойств сновидения
.setting-label {
  display: inline-flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  user-select: none;
  gap: 6px;
  // Картинка
  &__image {
    @include mixins.customsColors(vars.$buttonSize, 0.6);
    // Картинка и иконка
    > mat-icon,
    img {
      border-radius: 50%;
    }
  }
  // Заголовок
  &__main-title {
    font-size: 13px;
    font-weight: 300;
    color: colors.$subtitle;
  }
  // Подзаголовок
  &__sub-title {
    font-size: 16px;
    font-weight: 400;
    color: colors.$title;
  }
}

// Ключевое слово
.keyword {
  @include mixins.lineClamp(1, vars.$buttonSize, 16px, 0);
  // Свойства
  padding-left: 20px;
  padding-right: 20px;
  border-radius: math.div(vars.$buttonSize, 2);
  background-color: map.get(colors.$matDisabled, 100);
  color: map.get(colors.$matDisabled, contrast, 100);
  transition:
    background-color #{screens.$animationTime},
    color #{screens.$animationTime};
  user-select: none;
  cursor: pointer;
  // Выделение
  &:hover {
    background-color: map.get(colors.$matDisabled, 200);
    color: map.get(colors.$matDisabled, contrast, 200);
  }
  // Выбранное ключевое слово
  &.selected {
    background-color: map.get(colors.$matPrimary, 500);
    color: map.get(colors.$matPrimary, contrast, 500);
    // Выделение
    &:hover {
      background-color: map.get(colors.$matPrimary, 600);
      color: map.get(colors.$matPrimary, contrast, 600);
    }
    // Ничего не найдено
    &.noFound {
      background-color: map.get(colors.$matStatusWarn, 500);
      color: map.get(colors.$matStatusWarn, contrast, 500);
      // Выделение
      &:hover {
        background-color: map.get(colors.$matStatusWarn, 600);
        color: map.get(colors.$matStatusWarn, contrast, 600);
      }
    }
  }
}
