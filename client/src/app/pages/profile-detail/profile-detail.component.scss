@use "sass:map";
@use "sass:math";
@use "../../../assets/styles/screens";
@use "../../../assets/styles/containers";
@use "../../../assets/styles/vars";

// Блок информации
.information {
  $__elm: &;
  $mainAvatarSizes: (
    default: 20%,
    large: 30%,
    middle: 40%,
    small: 290px,
    xsmall: 290px,
  );
  $columnTemplates: (
    default: true,
    small: false,
    xsmall: false,
  );
  $rightColumnItems: "status" "general" "actions" "dreams";
  $rightColumnData: (
    default: (
      areas: "status" "actions" "general" "dreams",
      noActionsAreas: "status" "general" "dreams",
      columns: repeat(1, minmax(1px, 1fr)),
    ),
    xlarge: (
      areas: "status status status" "actions general general" "dreams dreams dreams",
      noActionsAreas: "status status status" "general general empty" "dreams dreams dreams",
      columns: repeat(3, minmax(1px, 1fr)),
    ),
  );
  // Свойства
  display: grid;
  align-items: start;
  // Аватарка
  &__left {
    position: relative;
    // Помощник
    &-helper {
      position: sticky;
      bottom: 0;
    }
    // Адаптив
    @include screens.adaptiveFor($mainAvatarSizes, $columnTemplates, containers.$cardPaddings) using($mainAvatarSize, $column, $cardPadding) {
      // Сброс колонок
      @if ($column == false) {
        margin: 0 auto;
        width: $mainAvatarSize;
      }
      // Помощник
      &-helper {
        top: vars.$headerHeight + map.get($cardPadding, y);
        bottom: map.get($cardPadding, y);
      }
    }
  }
  // Данные
  &__right {
    display: grid;
    // Свложения
    @each $item in $rightColumnItems {
      > #{"." + $item} {
        grid-area: #{$item};
      }
    }
    // Адаптив
    @include screens.adaptiveFor(vars.$userProfileBlocksGaps, $rightColumnData) using($gap, $data) {
      width: calc(100% + #{$gap});
      margin-top: -$gap;
      margin-right: -$gap;
      grid-template-columns: map.get($data, columns);
      grid-template-areas: map.get($data, areas);
      // Без блока действий
      &.noActions {
        grid-template-areas: map.get($data, noActionsAreas);
      }
      // Потомки
      @each $item in $rightColumnItems {
        > #{"." + $item} {
          margin-top: $gap;
          margin-right: $gap;
        }
      }
    }
  }
  // Адаптив
  @include screens.adaptiveFor($mainAvatarSizes, vars.$userProfileBlocksGaps, $columnTemplates) using($mainAvatarSize, $gap, $column) {
    grid-gap: $gap;
    // Горизонтальные колонки
    @if ($column == true) {
      grid-template-columns: #{$mainAvatarSize} minmax(1px, 1fr);
    }
    // Сброс колонок
    @else {
      grid-template-columns: 1fr;
      justify-content: center;
    }
  }
}
