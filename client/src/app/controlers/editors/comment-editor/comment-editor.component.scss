@use "sass:map";
@use "sass:math";
@use "colors";
@use "vars";
@use "containers";
@use "screens";
@use "mixins";

$spacing: 3px;
$fontSize: 15px;
$lineHeight: 26px;
$maxLines: 10;
$paddingX: containers.$cardPaddingX;
$paddingY: 0;

$adaptiveMin: xxsmall;
$adaptiveMax: large;

// Общая обертка
.overlay {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 0 #{$spacing};
  align-items: center;
  position: relative;
  z-index: 10;
  grid-template-areas: "editor actions" "attachments attachments";
  // С ответом
  &.with-reply {
    grid-template-columns: auto 1fr auto;
    grid-template-areas: "reply editor actions" "attachments attachments attachments";
  }
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    grid-template-columns: 1fr;
    grid-template-areas: "editor" "actions" "attachments";
    // С ответом
    &.with-reply {
      grid-template-columns: 1fr;
      grid-template-areas: "reply" "editor" "actions" "attachments";
    }
  }
  // Принудительный перенос
  :host.wrap-controls & {
    grid-template-columns: 1fr;
    grid-template-areas: "editor" "actions" "attachments";
    // С ответом
    &.with-reply {
      grid-template-columns: 1fr;
      grid-template-areas: "reply" "editor" "actions" "attachments";
    }
  }
}

// Блок с адресатом ответа
.reply {
  $avatarSize: 32px;
  $blockSpacing: math.div(vars.$buttonSize - $avatarSize, 2);
  $blockHeight: $avatarSize + ($blockSpacing * 2);
  // Свойства
  display: inline-flex;
  flex-flow: row nowrap;
  justify-content: flex-start;
  align-items: center;
  gap: 8px;
  height: $blockHeight;
  border-radius: math.div($blockHeight, 2);
  background-color: map.get(colors.$matPrimary, 50);
  color: map.get(colors.$matPrimary, contrast, 50);
  padding: $blockSpacing;
  // Обертка
  &__overlay {
    padding-left: $paddingX;
    grid-area: reply;
    // Адаптив
    @include screens.adaptive($adaptiveMin, $adaptiveMax) {
      padding-top: containers.$cardPaddingY;
    }
    // С переносом
    :host.wrap-controls & {
      padding-top: containers.$cardPaddingY;
    }
  }
  // Аватарка
  &__avatar {
    @include mixins.customsColors($avatarSize);
    // Свойства
    display: block;
    position: relative;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;
    }
    // Иконка
    > mat-icon {
      width: $avatarSize;
      height: $avatarSize;
      line-height: $avatarSize;
      font-size: math.round($avatarSize * 0.7);
      display: block;
      text-align: center;
      color: inherit;
      border-radius: 50%;
    }
    // Метка онлайн
    &-online {
      @include mixins.onlineBlinkPoint(6px, 2px);
    }
  }
  // Контент
  &__content {
    // Заголовок
    &-mainTitle {
      font-size: 11px;
      line-height: 13px;
      font-weight: 300;
    }
    // Заголовок
    &-subTitle {
      font-size: 14px;
      line-height: 19px;
      font-weight: 400;
    }
  }
  // Удаление
  &__delete {
    margin: -#{$blockSpacing};
  }
}

// Редактор
.editor {
  $actionMinHeight: vars.$buttonSize + (containers.$cardPaddingY * 2);
  $minHeight: $lineHeight + ($paddingY * 2);
  $maxHeight: ($lineHeight * $maxLines) + ($paddingY * 2);
  // Свойства
  min-height: math.max($minHeight, $actionMinHeight);
  display: flex;
  flex-flow: row nowrap;
  justify-content: stretch;
  align-items: center;
  cursor: text;
  padding-top: containers.$cardPaddingY;
  padding-bottom: containers.$cardPaddingY;
  grid-area: editor;
  // Скролл
  &__scroll {
    flex-grow: 1;
    max-height: $maxHeight;
    border-radius: #{containers.$cardBorderRadius} 0 0 #{containers.$cardBorderRadius};
  }
  // Поле ввода
  &__area {
    width: 100%;
    min-height: $minHeight;
    padding-left: $paddingX;
    border: none;
    outline: none;
    opacity: 0.7;
    transition: opacity #{screens.$animationTime};
    // Стиль текста
    &,
    ::ng-deep * {
      line-height: $lineHeight;
      font-size: $fontSize;
      color: colors.$title;
      vertical-align: top;
    }
    // Подсказка
    &[placeholder]:empty {
      &::before {
        content: attr(placeholder);
        color: colors.$text;
      }
      // Скрыть при фокусе
      &:focus::before {
        content: "";
      }
    }
    // Смайлики
    ::ng-deep .emoji-elm {
      display: inline-block;
      vertical-align: top;
      margin: 0 1px !important;
      pointer-events: none;
      width: auto !important;
      height: #{$lineHeight} !important;
      line-height: #{$lineHeight} !important;
    }
    // Редактирование разрешено
    &[contenteditable="true"] {
      opacity: 1;
    }
  }
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    min-height: $minHeight;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    min-height: $minHeight;
  }
}

// Кнопки
.actions {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;
  align-items: flex-start;
  gap: $spacing;
  padding: #{containers.$cardPaddingY} 0;
  grid-area: actions;
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    padding-top: 0;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    padding-top: 0;
  }
  // Список смайликов
  ::ng-deep .emoji-mart {
    // Поиск
    &-search-icon {
      top: 50%;
      transform: translateY(-50%);
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
    }
    // Смайлик
    &-emoji {
      &,
      > span {
        cursor: pointer;
      }
    }
  }
}

// Смайлики
.smiles {
  $languages: (
    en: "Pick your emoji . . .",
    ru: "Выберите смайлик . . ."
  );
  // Свойства
  z-index: 2;
  height: vars.$buttonSize;
  // Список
  &__list {
    box-shadow: containers.$cardBoxShadow;
    border-radius: containers.$cardBorderRadius;
    max-width: 100vw;
    // Вложенный элемент
    ::ng-deep .emoji-mart {
      max-width: 100%;
      border: none;
      // Стиль скинов
      &-skin {
        display: block;
      }
      // Превью
      &-preview {
        display: flex;
        flex-flow: row nowrap;
        justify-content: flex-start;
        align-items: center;
        padding: 0 10px;
        gap: 10px;
        // Скрыть
        &[hidden] {
          display: none;
        }
        // Данные
        &-emoji,
        &-data {
          position: static;
          top: auto;
          transform: none;
        }
        // Название и алиасы
        &-name,
        &-emoticons {
          @include mixins.lineClamp(1);
          // Свойства
          min-height: 0;
        }
        // Сокращенное название
        &-shortname {
          @include mixins.lineClamp(1, 1.2, 12px);
          // Свойства
          min-height: 0;
        }
      }
      // Заголовок
      &-title-label {
        font-size: 0;
        line-height: 1;
        // Заголовок
        &::before {
          line-height: 1.2;
          font-size: 26px;
        }
      }
    }
    // Языки
    @each $language, $title in $languages {
      &[language="#{$language}"] ::ng-deep .emoji-mart-title-label::before {
        content: $title;
      }
    }
  }
}

// Помощник в поле действий для переноса события
.event-helper {
  position: relative;
  display: none;
  flex-grow: 1;
  height: vars.$buttonSize + containers.$cardPaddingY;
  margin-bottom: -#{containers.$cardPaddingY};
  cursor: text;
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    display: block;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    display: block;
  }
}

// Закрепленные материалы
.attachments {
  $itemHeight: 80px;
  // Свойства
  padding: #{containers.$cardPaddingY} 0;
  padding-left: containers.$cardPaddingX;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: center;
  gap: 6px;
  grid-area: attachments;
  // Изображение
  &__image {
    position: relative;
    height: $itemHeight;
    cursor: pointer;
    width: $itemHeight;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    // Удаление
    &-overlay {
      @include mixins.inset;
      // Свойства
      position: absolute;
      background-color: colors.$overlayColor;
      opacity: 0;
      transition: opacity #{screens.$animationTime};
      text-align: center;
      color: colors.$titleDark;
      // Иконка
      > mat-icon {
        height: $itemHeight;
        line-height: $itemHeight;
        display: inline-block;
      }
    }
    // Выделение
    &:hover &-overlay:not(.noSelect) {
      opacity: 1;
    }
  }
}
