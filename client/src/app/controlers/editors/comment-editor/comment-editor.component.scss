@use "sass:math";
@use "colors";
@use "vars";
@use "containers";
@use "screens";

$spacing: 3px;
$fontSize: 15px;
$lineHeight: 24px;
$maxLines: 10;
$paddingX: containers.$cardPaddingX;
$paddingY: 0;

$adaptiveMin: xsmall;
$adaptiveMax: large;

// Общая обертка
:host {
  display: grid;
  grid-template-columns: 1fr auto;
  gap: 0 #{$spacing};
  align-items: center;
  position: relative;
  z-index: 10;
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    grid-template-columns: 1fr;
  }
  // Принудительный перенос
  &.wrap-controls {
    grid-template-columns: 1fr;
  }
}

// Редактор
.editor {
  $actionMinHeight: vars.$buttonSize + (containers.$cardPaddingY * 2);
  $minHeight: $lineHeight + ($paddingY * 2);
  $maxHeight: ($lineHeight * $maxLines) + ($paddingY * 2);
  // Свойства
  min-height: math.max($minHeight, $actionMinHeight);
  display: flex;
  flex-flow: row nowrap;
  justify-content: stretch;
  align-items: center;
  cursor: text;
  padding-top: containers.$cardPaddingY;
  padding-bottom: containers.$cardPaddingY;
  // Скролл
  &__scroll {
    flex-grow: 1;
    max-height: $maxHeight;
    border-radius: #{containers.$cardBorderRadius} 0 0 #{containers.$cardBorderRadius};
  }
  // Поле ввода
  &__area {
    width: 100%;
    min-height: $minHeight;
    padding-left: $paddingX;
    border: none;
    outline: none;
    opacity: 0.7;
    transition: opacity #{screens.$animationTime};
    // Стиль текста
    &,
    ::ng-deep * {
      line-height: $lineHeight;
      font-size: $fontSize;
      color: colors.$title;
    }
    // Подсказка
    &[placeholder]:empty {
      &::before {
        content: attr(placeholder);
        color: colors.$text;
      }
      // Скрыть при фокусе
      &:focus::before {
        content: "";
      }
    }
    // Смайлики
    ::ng-deep .emoji-elm {
      display: inline-block;
      vertical-align: middle;
      margin: 0;
      pointer-events: none;
    }
    // Редактирование разрешено
    &[contenteditable="true"] {
      opacity: 1;
    }
  }
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    min-height: $minHeight;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    min-height: $minHeight;
  }
}

// Кнопки
.actions {
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;
  align-items: flex-start;
  gap: $spacing;
  padding: #{containers.$cardPaddingY} 0;
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    padding-top: 0;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    padding-top: 0;
  }
  // Список смайликов
  ::ng-deep .emoji-mart {
    // Поиск
    &-search-icon {
      top: 50%;
      transform: translateY(-50%);
      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
    }
    // Смайлик
    &-emoji {
      &,
      > span {
        cursor: pointer;
      }
    }
  }
}

// Смайлики
.smiles {
  z-index: 2;
  height: vars.$buttonSize;
  // Список
  &__list {
    position: absolute;
    right: -#{containers.$cardPaddingX};
    bottom: 300%;
    visibility: hidden;
    opacity: 0;
    box-shadow: containers.$cardBoxShadow;
    border-radius: containers.$cardBorderRadius;
    transition: opacity #{screens.$animationTime}, visibility #{screens.$animationTime}, bottom #{screens.$animationTime}, top #{screens.$animationTime};
    max-width: calc(100% + #{containers.$cardPaddingX});
    // Вложенный элемент
    ::ng-deep > .emoji-mart {
      max-width: 100%;
      border: none;
    }
    // Показать список
    &.show {
      bottom: 100%;
      opacity: 1;
      visibility: visible;
    }
    // Смайлики снизу
    &.bottomSmiles {
      bottom: auto;
      top: 300%;
      // Показать список
      &.show {
        bottom: auto;
        top: 100%;
      }
    }
  }
}

// Помощник в поле действий для переноса события
.event-helper {
  position: relative;
  display: none;
  flex-grow: 1;
  height: vars.$buttonSize + containers.$cardPaddingY;
  margin-bottom: -#{containers.$cardPaddingY};
  cursor: text;
  // Адаптив
  @include screens.adaptive($adaptiveMin, $adaptiveMax) {
    display: block;
  }
  // Принудительный перенос
  :host.wrap-controls & {
    display: block;
  }
}
