@use "sass:map";
@use "sass:math";
@use "material";
@use "containers";
@use "screens";
@use "colors";
@use "vars";
@use "mixins";

$colors: (
  primary: map.get(colors.$matPrimary, 500),
  accent: map.get(colors.$matSecondary, 500),
  warn: map.get(colors.$matStatusWarn, 500),
  disabled: map.get(colors.$matDisabled, 600)
);

// Базовый стиль окна
@include material.matDialog;

// Свойства диалогового окна
.dialog__actions {
  justify-content: flex-end;
  // Несколько кнопок
  &-filler {
    flex-grow: 1;
  }
}

// Поле ввода Drag & Drop
.drag-input {
  $figureSize: 140px;
  $background: map.get(colors.$matDisabled, 500);
  $border: map.get(colors.$matDisabled, contrast, 500);
  $color: $border;
  $backgroundHover: map.get(colors.$matPrimary, 500);
  $borderHover: map.get(colors.$matPrimary, contrast, 500);
  $colorHover: map.get(colors.$matPrimary, contrast, 500);
  $backgroundLight: colors.$background;
  $borderLight: map.get(colors.$matPrimary, 500);
  $colorLight: colors.$title;
  $__elm: &;
  // Свойства
  display: none;
  padding-left: containers.$paddingX;
  padding-right: containers.$paddingX;
  width: calc(100% - #{containers.$paddingX * 2});
  max-height: calc(#{vars.$dialogContentMaxHeight} - #{containers.$paddingX * 2});
  height: 500px;
  margin: containers.$paddingX;
  border: 1px dashed #{$border};
  background-color: $background;
  box-shadow: 0 0 0 #{containers.$paddingX} #{$background};
  border-radius: containers.$cardBorderRadius;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  transition:
    background-color #{screens.$animationTime},
    box-shadow #{screens.$animationTime},
    border-color #{screens.$animationTime};
  // Иконка
  &__icon {
    display: block;
    width: $figureSize;
    height: $figureSize;
    line-height: $figureSize;
    font-size: $figureSize;
    text-align: center;
    color: $color;
    transition: color #{screens.$animationTime};
  }
  // Заголовок
  &__title {
    font-size: 15px;
    line-height: 20px;
    text-align: center;
    font-weight: 300;
    color: $color;
    transition: color #{screens.$animationTime};
    // Уменьшить отступ
    &.small-margin {
      margin-top: containers.$paddingX;
    }
  }
  // Кнопка загрузки
  &__button {
    margin-top: containers.$paddingX;
  }
  // Показать элемент
  &.show {
    display: flex;
  }
  // Наведение
  &:hover:not(.light),
  &.hover {
    background-color: $backgroundHover;
    box-shadow: 0 0 0 #{containers.$paddingX} #{$backgroundHover};
    border-color: $borderHover;
    // Дочерние элементы
    & #{$__elm} {
      // Иконка
      &__icon {
        color: $colorHover;
      }
      // Заголовок
      &__title {
        color: $colorHover;
      }
    }
  }
  // Светлый фон
  &.light {
    background-color: $backgroundLight;
    box-shadow: 0 0 0 #{containers.$paddingX} #{$backgroundLight};
    border-color: $borderLight;
    // Дочерние элементы
    & #{$__elm} {
      // Иконка
      &__icon {
        color: $borderLight;
      }
      // Заголовок
      &__title {
        color: $colorLight;
      }
    }
  }
  // Адаптив
  @include screens.adaptiveFor(containers.$paddingsY) using($paddingY) {
    padding-top: $paddingY;
    padding-bottom: $paddingY;
    // Заголовок
    &__title:not(.small-margin) {
      padding-top: $paddingY;
    }
  }
}

// Загрузчик файла
.file-input {
  display: none;
}

// Загруженный файл
.file {
  $spacing: 15px;
  $multiSpacing: 5px;
  $loaderSize: 48px;
  $multiLoaderSize: 30px;
  $multiCount: 3;
  // Свойства
  display: block;
  padding-bottom: 100%;
  background-color: colors.$background;
  border-radius: vars.$commentAttachmentBorderRadius;
  overflow: hidden;
  position: relative;
  // Картинка
  &__img {
    @include mixins.inset;
    // Свойства
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    // Загружается
    &.loading {
      opacity: 0.7;
      filter: grayscale(1);
    }
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
  // Загрузчик
  &__loader {
    width: math.round($loaderSize * 0.8);
    height: math.round($loaderSize * 0.8);
    // Для нескольких файлов
    &.multi {
      width: math.round($multiLoaderSize * 0.8);
      height: math.round($multiLoaderSize * 0.8);
    }
  }
  // Загрузчкик с прогрессом
  &__progress {
    $height: 3px;
    $padding: math.div($spacing - $height, 2);
    // Модули
    @include mixins.inset($padding);
    // Свойства
    position: absolute;
    top: auto;
    height: $height;
    // Для нескольких файлов
    &.multi {
      @include mixins.inset(0);
      // Свойства
      top: auto;
    }
    // Линия прогресса
    &-line {
      height: 100%;
      width: 0;
      border-radius: math.div($height, 2);
      background-color: map.get(colors.$matPrimary, 500);
      overflow: hidden;
      position: relative;
      // Свечение
      &::before {
        @include mixins.inset;
        // Свойства
        content: "";
        position: absolute;
        display: block;
        opacity: 0.5;
        background: linear-gradient(90deg, transparent 0, #fff 50%, transparent 100%);
        background-size: 100px;
        background-repeat: no-repeat;
        animation: ease-in-out progressBarLight 2s infinite;
        animation-duration: inherit;
      }
    }
  }
  // Иконка
  &__icon {
    position: absolute;
    top: $spacing;
    left: $spacing;
    width: $loaderSize;
    height: $loaderSize;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: map.get($colors, disabled);
    border-radius: 50%;
    cursor: default;
    // Цвета
    @each $color, $value in $colors {
      &[color="#{$color}"] {
        background-color: $value;
      }
    }
    // Для нескольких файлов
    &.multi {
      top: $multiSpacing;
      left: $multiSpacing;
      width: $multiLoaderSize;
      height: $multiLoaderSize;
    }
    // Иконка
    > mat-icon {
      color: colors.$titleDark;
    }
    // Иконка при ошибке
    &.error {
      cursor: pointer;
    }
    // Иконка при ошибке
    &.error > &-image {
      &-unhovered {
        display: inline;
      }
      // Иконка при выделении
      &-hovered {
        display: none;
      }
    }
    // Иконка при выделении ошибки
    &.error:hover > &-image {
      &-unhovered {
        display: none;
      }
      // Иконка при выделении
      &-hovered {
        display: inline;
      }
    }
  }
  // Список
  &__list {
    display: block;
    gap: 10px;
    // Несколько файлов
    &.multi {
      display: grid;
      grid-template-columns: repeat(#{$multiCount}, 1fr);
    }
  }
}

// Анимация свечения прогресс бара
@keyframes progressBarLight {
  0% {
    background-position: -50px center;
  }
  50% {
    background-position: calc(100% + 50px) center;
  }
  100% {
    background-position: -50px center;
  }
}
