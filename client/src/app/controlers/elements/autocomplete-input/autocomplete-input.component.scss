@use "sass:map";
@use "sass:list";
@use "../../../../assets/styles/colors";
@use "../../../../assets/styles/material";

// Свойства
$image-size: 49px;
// Обертка поля
@include material.mat-form-field;
@include material.mat-option;

// Миксин цветов
@mixin customs($size) {
  $colors: (
    primary: colors.$mat-primary 500,
    accent: colors.$mat-secondary 500,
    warn: colors.$mat-status-warn 500,
    disabled: colors.$mat-disabled 500,
  );
  // Свойства
  width: $size;
  height: $size;
  // Картинки
  > img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  // Иконка
  > mat-icon {
    width: $size;
    height: $size;
    line-height: $size;
    font-size: $size * 0.7;
    text-align: center;
  }

  // Размеры картинки
  @each $value in contain, cover {
    &[position="#{$value}"] > img {
      object-fit: $value;
    }
  }
  // Тип заливки
  &[background="transparent"] > mat-icon {
    font-size: $size;
    border-radius: 0;
    background-color: transparent;
  }
  // Цвета
  @each $colors, $value in $colors {
    // Для закрашенных иконок
    &[color="#{$colors}"][background="fill"] > mat-icon {
      background-color: map.get(list.nth($value, 1), list.nth($value, 2));
      color: map.get(list.nth($value, 1), contrast, list.nth($value, 2));
    }
    // Для незакрашенных иконок
    &[color="#{$colors}"][background="transparent"] > mat-icon {
      color: map.get(list.nth($value, 1), list.nth($value, 2));
    }
  }

  @content;
}

// Миксин обертки
@mixin mat-form-field {
  $elm: &;
  $padding: 12px;
  // Свойства
  width: 100%;
  // Поле с картинкой
  .image + & {
    margin-left: -$image-size;
    // Обертка поля
    ::ng-deep #{$elm}-flex {
      padding-left: $image-size + $padding;
      padding-right: $padding;
    }
    // Линия
    ::ng-deep #{$elm}-underline {
      left: $image-size;
      width: calc(100% - #{$image-size});
    }
  }
}

// Поле ввода
.mat-input-element {
  font-weight: 400;
  // Для поля без ввода
  &:read-only {
    cursor: pointer;
  }
}

// Элемент списка
.option {
  $image-size: 32px;
  // Свойства
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  gap: 0 10px;
  min-height: $image-size;
  padding: 10px 15px;

  // Картинка или иконка
  &__image {
    // Картинка
    > img {
      border-radius: 3px;
    }
    // Иконка
    > mat-icon {
      border-radius: 4px;
    }
    // Кстомизация
    @include customs($image-size) {
    }
  }

  // Тексты
  &__name {
    display: flex;
    flex-flow: column nowrap;
    justify-content: space-around;
    align-items: flex-start;
    gap: 2px 0;
    line-height: 1.12;
    flex-grow: 1;
    width: 0;
    white-space: normal;
    // Заглавная буква
    &-title,
    &-subTitle {
      &::first-letter {
        text-transform: uppercase;
      }
    }
    // Заголовок
    &-title {
      font-size: 15px;
      font-weight: 300;
    }
    // Подзаголовок
    &-subTitle {
      font-size: 13px;
      font-weight: 300;
    }
  }
}

// Сообщение об ошибке
.mat-error {
  font-size: 10px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Общий слой
.layout {
  display: flex;
  flex-flow: row-reverse nowrap;
  align-items: flex-start;
  cursor: pointer;
}

// Поле
.mat-form-field {
  @include mat-form-field;
  // Поле с картинкой
  &.hasImage {
    width: calc(100% - #{$image-size});
  }
}

// Картинка
.image {
  @include customs($image-size);
}

// Иконка отображения пароля
.iconButton {
  $size: 24px;
  // Свойства
  cursor: pointer;
  color: inherit;
  width: $size;
  height: $size;
  line-height: $size;
  font-size: $size;
  top: 2px;
  margin-left: 8px;
  position: relative;
  // Иконка
  > mat-icon {
    width: inherit;
    height: inherit;
    line-height: inherit;
    font-size: inherit;
    display: block;
  }
}

// Стили автозаполнения
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px #f5f5f5 inset !important;
}
