@use "sass:map";
@use "screens";
@use "containers";
@use "mixins";
@use "colors";
@use "vars";

:host {
  display: block;
}

// Список
.list {
  $itemCounts: (
    default: (
      default: 1,
      xlarge: 4,
      large: 3,
      middle: 2
    ),
    3: (
      default: 1,
      xlarge: 3,
      large: 2
    ),
    2: (
      default: 1,
      xlarge: 2
    ),
    1: (
      default: 1
    )
  );
  // Свойства
  width: 100%;
  display: flex;
  flex-flow: row wrap;
  justify-content: flex-start;
  align-items: stretch;
  // Цикл по элементам
  @each $itemCount, $counts in $itemCounts {
    $attribute: "";
    // Добавить аттрибут счетчика
    @if ($itemCount!= "default") {
      $attribute: "[items='" + $itemCount + "']";
    }
    // Адаптив сетки
    @include screens.adaptiveFor($counts, vars.$userProfileBlocksGaps) using($count, $gap) {
      // Элемент
      &#{$attribute} > &__item {
        width: calc((100% - #{$gap * ($count - 1)}) / #{$count});
      }
      // Скрыть в режиме одной линии
      &#{$attribute}.oneLine > &__item:nth-child(#{$count}) ~ &__item {
        display: none;
      }
    }
  }
  // Адаптив сетки
  &:not(.in-attachment) {
    @include screens.adaptiveFor(vars.$userProfileBlocksGaps) using($gap) {
      gap: $gap;
    }
  }
  // Для сновидения в закреплениях
  &.in-attachment {
    gap: containers.$cardPaddingY;
  }
}

// Элемент
.dream {
  $borderRadius: containers.$cardBorderRadius;
  $spacingXMenu: 8px;
  $descriptionCount: 4;
  $keywordsCount: 2;
  $descriptionLineHeight: 15px;
  $primaryColorKey: 500;
  $menuSize: 40px;
  $titleSize: 22px;
  $subTitleSize: $menuSize - $titleSize;
  $imageHeight: (vars.$dreamCardSpacingY * 6) + $menuSize + ($descriptionCount * $descriptionLineHeight)+ ($keywordsCount * $descriptionLineHeight);
  // Свойства
  border-radius: $borderRadius;
  background-color: colors.$card;
  box-shadow: containers.$cardBoxShadow;
  // Для сновидения в закреплениях
  &.in-attachment {
    box-shadow: none;
    padding: vars.$commentAttachmentPaddings;
    border-radius: vars.$commentAttachmentBorderRadius;
    background-color: colors.$background;
  }
  // Обложка
  &__image {
    $positions-x: left center right;
    $positions-y: top center bottom;
    // Свойства
    width: 100%;
    height: $imageHeight;
    border-radius: #{$borderRadius} #{$borderRadius} 0 0;
    overflow: hidden;
    position: relative;
    cursor: pointer;
    // Картинка
    > img,
    > a > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    // Без картинки
    &.no-image {
      display: flex;
      flex-flow: column nowrap;
      justify-content: space-between;
      align-items: stretch;
    }
    // С картинкой
    &:not(.no-image) {
      // Контент
      > .title,
      > .description,
      > .keywords {
        position: absolute;
        width: 100%;
        left: 0;
        z-index: 2;
      }
      // Заголовок
      > .title {
        top: 0;
      }
      // Описание
      > .description {
        bottom: ($keywordsCount * $descriptionLineHeight) + (vars.$dreamCardSpacingY * 2);
        // Без ключевых слов
        &.no-keywords {
          bottom: 0;
        }
      }
      // Описание
      > .keywords {
        bottom: 0;
      }
    }
    // Затенение
    &[imageOverlay="true"]:after {
      @include mixins.inset;
      // Свойства
      position: absolute;
      display: block;
      content: "";
      background-color: #000;
      opacity: 0.4;
      z-index: 1;
    }
    // Позиция по ширине
    @each $position-x in $positions-x {
      // Позиция по высоте
      @each $position-y in $positions-y {
        &[positionX="#{$position-x}"][positionY="#{$position-y}"] {
          > img {
            object-position: $position-x $position-y;
          }
        }
      }
    }
  }
  // Контейнер текста
  &__text {
    padding: #{vars.$dreamCardSpacingY} #{vars.$dreamCardSpacingX};
    // Заголовок
    &-title {
      @include mixins.lineClamp(1, $titleSize, 15px);
      // Свойства
      font-weight: 400;
      color: map.get(colors.$matPrimary, contrast, $primaryColorKey);
      grid-area: title;
      cursor: pointer;
      // Заголовок по умолчанию
      &.default-title {
        opacity: 0.9;
      }
      // С картинкой
      .has-image > & {
        color: colors.$titleDark;
      }
    }
    // Подзаголовок
    &-subtitle {
      @include mixins.lineClamp(1, $subTitleSize, 12px);
      // Свойства
      font-weight: 300;
      color: map.get(colors.$matPrimary, contrast, $primaryColorKey);
      opacity: 0.9;
      grid-area: subtitle;
      cursor: pointer;
      // С картинкой
      .has-image > & {
        color: colors.$subTitleDark;
        opacity: 1;
      }
    }
    // Меню
    &-menu {
      grid-area: menu;
      color: map.get(colors.$matPrimary, contrast, $primaryColorKey);
      // С картинкой
      .has-image > & {
        color: colors.$titleDark;
      }
    }
    // Описание
    &-description {
      @include mixins.lineClamp($descriptionCount, $descriptionLineHeight, 13px);
      // Свойства
      font-weight: 300;
      color: colors.$text;
      height: $descriptionCount * $descriptionLineHeight;
      // С картинкой
      .has-image > & {
        color: colors.$textDark;
        min-height: 0;
        max-height: 0;
        opacity: 0;
        height: auto;
        transition:
          max-height #{screens.$animationTime},
          opacity #{screens.$animationTime};
        // Выделение
        .dream:hover & {
          max-height: $descriptionCount * $descriptionLineHeight;
          opacity: 1;
        }
      }
    }
    // Ключевые слова
    &-keywords {
      $spacing: 0px;
      // Миксины
      @include mixins.lineClamp($keywordsCount, $descriptionLineHeight, 13px, $spacing);
      // Свойства
      height: #{($keywordsCount * $descriptionLineHeight) + ($spacing * $keywordsCount)} !important;
      max-height: #{($keywordsCount * $descriptionLineHeight) + ($spacing * $keywordsCount)} !important;
      margin: #{-$spacing} 0;
      color: colors.$text;
      display: flex;
      flex-flow: row wrap;
      justify-content: flex-start;
      align-items: center;
      gap: 0 8px;
      // Ключевое слово
      .keyword {
        color: inherit;
        vertical-align: top;
        display: inline-flex;
        justify-content: flex-start;
        align-items: center;
        flex-flow: row nowrap;
        // Общие правила текста
        &__text,
        &__comma {
          @include mixins.lineClamp(1, $descriptionLineHeight, 13px);
          // Свойства
          font-weight: 400;
          display: block;
        }
      }
      // С картинкой
      .has-image > & {
        color: colors.$textDark;
      }
    }

    // Заголовок
    &.title {
      background-color: map.get(colors.$matPrimary, $primaryColorKey);
      // С картинкой
      &.has-image {
        background-color: transparent;
      }
    }
    // С меню
    &.menu {
      display: grid;
      grid-template-columns: 1fr #{$menuSize};
      grid-template-rows: #{$titleSize} #{$subTitleSize};
      grid-template-areas: "title menu" "subtitle menu";
      padding-right: $spacingXMenu;
    }
    // Действия
    &.actions {
      display: flex;
      flex-flow: row nowrap;
      justify-content: space-between;
      align-items: center;
      gap: 0;
      border-radius: 0 0 #{$borderRadius} #{$borderRadius};
      // Разделитель сверху
      *:not(.no-content.no-image) + & {
        border-top: 1px solid #{colors.$border};
      }
    }
    // Описание и ключевые слова
    &.description,
    &.keywords,
    &.actions {
      &.in-attachment:not(.has-image) {
        background-color: colors.$card;
      }
    }

    // Последующие блоки
    & + & {
      border-top: 1px solid #{colors.$background};
      // Без контента
      &.no-content,
      .no-content + &,
      &.has-image {
        border-top-color: transparent;
      }
    }
  }
  // Контейнер автора
  &__icons {
    display: flex;
    text-decoration: none;
    grid-gap: 2px;
    align-items: center;
    // Иконка
    &-icon {
      @include mixins.customsColors(vars.$buttonSize);
      // Свойства
      position: relative;
      width: vars.$buttonSize;
      height: vars.$buttonSize;
      grid-area: icon;
      display: block;
      text-decoration: none;
      // Картинка
      > img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 50%;
      }
      // Иконка
      > mat-icon {
        width: vars.$buttonSize;
        height: vars.$buttonSize;
        line-height: vars.$buttonSize;
        font-size: vars.$buttonSize * 0.7;
        display: block;
        text-align: center;
        color: inherit;
        border-radius: 50%;
      }
      // Убрать скругление
      & > img,
      & > mat-icon {
        &.no-circle {
          border-radius: 0;
        }
      }
      // Метка онлайн
      &-online {
        @include mixins.onlineBlinkPoint(6px, 2px);
      }
    }
  }
}
