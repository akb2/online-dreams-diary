@use "sass:map";
@use "sass:math";
@use "containers";
@use "colors";
@use "vars";
@use "screens";
@use "mixins";

// Элемент комментария
.comment {
  $__elm: &;
  $__marginElms: (#{&}, "#{&}__more-loader.loading");
  // Свойства
  display: flex;
  // Данные
  &__data {
    flex-grow: 1;
  }
  // Аватарка
  &__avatar {
    @include mixins.customsColors(containers.$avatarSize);
    // Свойства
    display: block;
    position: relative;
    flex-basis: containers.$avatarSize;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;
    }
    // Иконка
    > mat-icon {
      width: containers.$avatarSize;
      height: containers.$avatarSize;
      line-height: containers.$avatarSize;
      font-size: containers.$avatarSize * 0.7;
      display: block;
      text-align: center;
      color: inherit;
      border-radius: 50%;
    }
    // Метка онлайн
    &-online {
      @include mixins.onlineBlinkPoint(6px, 4px);
    }
  }
  // Шапка
  &__header {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-flow: row nowrap;
    column-gap: containers.$cardPaddingY;
    min-height: containers.$avatarSize;
    // Текст
    &-text {
      flex-grow: 1;
    }
    // Имя
    &-name {
      font-size: 15px;
      line-height: 20px;
      font-weight: 500;
      text-decoration: none;
      color: map.get(colors.$matPrimary, 500);
    }
    // Статус
    &-state {
      display: block;
      font-size: 12px;
      line-height: 18px;
      font-weight: 300;
      color: colors.$text;
      // Дочерние элементы
      time,
      a {
        font: inherit;
        text-decoration: none;
      }
      // Время
      time {
        color: inherit;
      }
    }
    // Действия
    &-actions {
      display: flex;
      flex-flow: row nowrap;
      justify-content: flex-end;
      align-items: center;
    }
  }
  // Тело
  &__body {
    $__elm: &;
    // Свойства
    background-color: colors.$card;
    padding: containers.$cardPaddingY;
    padding-bottom: 0;
    box-shadow: containers.$cardBoxShadow;
    border-radius: containers.$cardBorderRadius;
    margin-top: containers.$cardPaddingY;
    text-align: left;
    width: 100%;
    display: block;
    // Текст комментария
    &-text {
      margin-top: 0;
      margin-bottom: 0;
      text-indent: 0;
      display: block;
      padding-bottom: containers.$cardPaddingY;
    }
    // Прикрепленные данные
    &-attachment {
      $borderRadius: 6px;
      $attachCount: 4;
      $targetSize: calc((100% - #{containers.$cardPaddingY * ($attachCount - 1)}) / #{$attachCount});
      // Свойства
      display: block;
      float: right;
      width: $targetSize;
      padding-bottom: $targetSize;
      background-color: colors.$background;
      border-radius: $borderRadius;
      position: relative;
      margin-left: containers.$cardPaddingY;
      margin-bottom: containers.$cardPaddingY;
      // Данные
      &-data {
        @include mixins.inset;
        // Свойства
        position: absolute;
        // Граффити
        > .image {
          margin: $borderRadius;
          width: calc(100% - #{$borderRadius * 2});
          height: calc(100% - #{$borderRadius * 2});
          object-fit: cover;
          border-radius: math.div($borderRadius, 2);
        }
      }
    }
    // Сбросить плавание
    &::after {
      content: "";
      display: block;
      width: 100%;
      clear: both;
    }
    // Количество вложений
    &[attachments-count="4"] {
      // Потомки
      & #{$__elm} {
        // Прикрепленные данные
        &-attachment:nth-of-type(4n) {
          margin-left: 0;
        }
      }
    }
  }
  // Текст
  &__text {
    padding-left: containers.$cardPaddingY + containers.$avatarSize;
    line-height: 24px;
    font-size: 15px;
    font-weight: 300;
    // Смайлики
    ::ng-deep > .smile {
      display: inline-block;
      line-height: 24px;
      vertical-align: top;
      margin: 0 1px;
    }
    // Для телефона
    @include screens.adaptive(auto, xsmall) {
      padding-left: 0;
      margin-top: containers.$cardPaddingY;
    }
  }
  // Смещения для блоков определения загрузки
  &__more-loader {
    position: relative;
  }
  // Адаптив
  @include screens.adaptiveFor(vars.$userProfileBlocksGaps) using($gap) {
    gap: 0 #{$gap};
    // Последующие блоки
    @each $elmA in $__marginElms {
      @each $elmB in $__marginElms {
        @at-root #{$elmA} + #{$elmB} {
          margin-top: $gap;
        }
      }
    }
    // Смещения для блоков определения загрузки
    &__more-loader {
      bottom: -#{$gap};
      // Новые комментарии
      &.next {
        top: -#{$gap};
        bottom: auto;
      }
    }
  }
}
