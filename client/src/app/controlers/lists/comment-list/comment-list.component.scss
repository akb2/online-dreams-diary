@use "sass:map";
@use "sass:math";
@use "containers";
@use "colors";
@use "vars";
@use "screens";
@use "mixins";

// Массив количества элемента вложений в одну строку
$attachmentCounts: (
  6: (
    default: 5
  ),
  5: (
    default: 2,
    xlarge: 5,
    large: 4,
    middle: 3,
    xxsmall: 1
  ),
  4: (
    default: 4
  ),
  3: (
    default: 3
  ),
  2: (
    default: 2
  ),
  1: (
    default: 1
  )
);

// Элемент комментария
.comment {
  $__elm: &;
  $__marginElms: (#{&}, "#{&}__more-loader.loading");
  $spacing: containers.$cardPaddingY;
  // Свойства
  display: flex;
  // Данные
  &__data {
    flex-grow: 1;
  }
  // Аватарка
  &__avatar {
    @include mixins.customsColors(containers.$avatarSize);
    // Свойства
    display: block;
    position: relative;
    flex-basis: containers.$avatarSize;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 50%;
    }
    // Иконка
    > mat-icon {
      width: containers.$avatarSize;
      height: containers.$avatarSize;
      line-height: containers.$avatarSize;
      font-size: containers.$avatarSize * 0.7;
      display: block;
      text-align: center;
      color: inherit;
      border-radius: 50%;
    }
    // Метка онлайн
    &-online {
      @include mixins.onlineBlinkPoint(6px, 4px);
    }
  }
  // Шапка
  &__header {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-flow: row nowrap;
    column-gap: containers.$cardPaddingY;
    min-height: containers.$avatarSize;
    // Текст
    &-text {
      flex-grow: 1;
    }
    // Имя
    &-name {
      @include mixins.lineClamp(1, 20px, 15px);
      // Свойства
      font-weight: 500;
      text-decoration: none;
      color: map.get(colors.$matPrimary, 500);
    }
    // Статус
    &-state {
      @include mixins.lineClamp(2, 18px, 12px);
      // Свойства
      display: block;
      font-weight: 300;
      color: colors.$text;
      // Дочерние элементы
      time,
      a {
        font: inherit;
        text-decoration: none;
      }
      // Время
      time {
        color: inherit;
      }
    }
    // Действия
    &-actions {
      display: flex;
      flex-flow: row nowrap;
      justify-content: flex-end;
      align-items: center;
    }
  }
  // Тело
  &__body {
    $__elm: &;
    // Свойства
    background-color: colors.$card;
    padding: $spacing;
    padding-bottom: 0;
    box-shadow: containers.$cardBoxShadow;
    border-radius: containers.$cardBorderRadius;
    margin-top: 6px;
    text-align: left;
    width: 100%;
    display: block;
    // Текст комментария
    &-text {
      margin-top: 0;
      margin-bottom: 0;
      text-indent: 0;
      display: block;
      padding-bottom: $spacing;
      word-wrap: break-word;
      line-height: 24px;
      font-size: 15px;
      font-weight: 300;
      // Смайлики
      ::ng-deep > .smile {
        display: inline-block;
        line-height: 24px;
        vertical-align: top;
        margin: 0 1px;
      }
    }
    // Прикрепленные данные
    &-attachment {
      $borderRadius: 6px;
      $attachCount: 4;
      // Свойства
      display: block;
      float: left;
      background-color: colors.$background;
      border-radius: $borderRadius;
      overflow: hidden;
      position: relative;
      margin-right: $spacing;
      margin-bottom: $spacing;
      cursor: pointer;
      user-select: none;
      // Данные
      &-data {
        @include mixins.inset;
        // Свойства
        position: absolute;
      }
      // Затенение
      &-overlay {
        @include mixins.inset;
        // Свойства
        position: absolute;
        display: flex;
        flex-flow: column nowrap;
        justify-content: center;
        align-items: center;
        gap: 10px;
        background-color: colors.$overlayColor;
        opacity: 0;
        transition: opacity #{screens.$animationTime};
        // Иконка
        > mat-icon {
          $size: vars.$textMessageAttachmentIconSize;
          // Свойства
          display: block;
          width: $size;
          height: $size;
          line-height: $size;
          font-size: $size;
          text-align: center;
          color: colors.$titleDark;
        }
        // Заголовок
        > title {
          color: colors.$titleDark;
          font-size: 16px;
          line-height: 20px;
          font-weight: 400;
          display: block;
        }
      }
      // Выделение
      &:hover &-overlay {
        opacity: 1;
      }
    }
    // Сбросить плавание
    &::after {
      content: "";
      display: block;
      width: 100%;
      clear: both;
    }
  }
  // Смещения для блоков определения загрузки
  &__more-loader {
    position: relative;
  }
  // Цикл по количеству вложений на строке
  @each $maxCountPerLine, $countsPerLine in $attachmentCounts {
    @include screens.adaptiveFor($countsPerLine) using($countPerLine) {
      &__body {
        $__elm: &;
        // Стили для разного числа элементов
        &[attachments-per-line="#{$maxCountPerLine}"] {
          // Потомки
          & #{$__elm} {
            // Прикрепленные данные
            &-attachment {
              $size: calc((100% - #{$spacing * ($countPerLine - 1)}) / #{$countPerLine});
              // Свойства
              width: $size;
              padding-bottom: $size;
              // Сбросить отступ слева
              &:nth-of-type(#{$countPerLine}n) {
                margin-right: 0;
              }
            }
            // Отступ текста
            &-attachment:nth-of-type(#{$countPerLine}) ~ #{$__elm}-text {
            }
          }
          // Вложений меньше чем максимальное число на одной строке
          @for $count from 1 through $countPerLine {
            &.no-text[attachments-count="#{$count}"] {
              & #{$__elm} {
                // Прикрепленные данные
                &-attachment {
                  $size: calc((100% - #{$spacing * ($count - 1)}) / #{$count});
                  // Свойства
                  width: $size;
                  padding-bottom: $size;
                  // Сбросить отступ слева
                  &:nth-of-type(#{$count}n) {
                    margin-right: 0;
                  }
                }
              }
            }
          }
        }
      }
      // Вложений меньше чем максимальное число на одной строке
      &__header,
      &__body {
        &[attachments-per-line="#{$maxCountPerLine}"] {
          @for $count from 1 through $countPerLine {
            &.no-text[attachments-count="#{$count}"] {
              width: calc((((100% - #{($spacing * ($countPerLine + 1))}) / #{$countPerLine}) * #{$count}) + #{$spacing * ($count + 1)});
            }
          }
        }
      }
    }
  }
  // Адаптив
  @include screens.adaptiveFor(vars.$userProfileBlocksGaps) using($gap) {
    gap: 0 #{$gap};
    // Последующие блоки
    @each $elmA in $__marginElms {
      @each $elmB in $__marginElms {
        @at-root #{$elmA} + #{$elmB} {
          margin-top: $gap;
        }
      }
    }
    // Смещения для блоков определения загрузки
    &__more-loader {
      bottom: -#{$gap};
      // Новые комментарии
      &.next {
        top: -#{$gap};
        bottom: auto;
      }
    }
  }
}

// Вложение: граффити
.graffity {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// Вложение: сновидение
.dream {
  @include mixins.inset;
  // Свойства
  position: absolute;
  background-color: map.get(colors.$matPrimary, 500);
  // Фон
  &__image {
    $positions-x: left center right;
    $positions-y: top center bottom;
    // Миксины
    @include mixins.inset;
    // Свойства
    position: absolute;
    z-index: 0;
    // Картинка
    > img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    // Затенение
    &[imageOverlay="true"]:after {
      @include mixins.inset;
      // Свойства
      position: absolute;
      display: block;
      content: "";
      background-color: #000;
      opacity: 0.4;
      z-index: 1;
    }
    // Позиция по ширине
    @each $position-x in $positions-x {
      // Позиция по высоте
      @each $position-y in $positions-y {
        &[positionX="#{$position-x}"][positionY="#{$position-y}"] {
          > img {
            object-position: $position-x $position-y;
          }
        }
      }
    }
  }
}
